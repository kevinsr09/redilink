---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="bg-cod-gray-950 ">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/app/favicon.svg" />
    <link rel="stylesheet" href="/app/styles.css" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="text-cod-gray-300">
    <div class="grid"></div>
    

		<slot />
	</body>
</html>
<style is:global>
	
  @font-face {
    font-family: 'Poppins';
    font-display: swap;
    src: url(/app/fonts/poppins/Poppins-Regular.ttf) format('truetype');
  }
  @font-face {
    font-family: 'Poppins-Bold';
    font-display: swap;
    src: url(/app/fonts/poppins/Poppins-Bold.ttf) format('truetype');
  }
  body{
    font-family: 'Poppins', sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;

  }
  
  .grid {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: -1;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30'%3E%3Crect width='40' height='40' fill='transparent' /%3E%3Crect x='50%' width='1' height='100%' fill='hsl(0 0% 15%)' /%3E%3Crect y='50%' width='100%' height='1' fill='hsl(0 0% 15%)' /%3E%3C/svg%3E%0A");
    mask-image: linear-gradient(to bottom, transparent 40%, hsl(0 0% 0% / 0.5) 100%);
}
	:root{

  --cod-gray-50: 0 0% 96%;
  --cod-gray-100: 0 0% 91%;
  --cod-gray-200: 0 0% 82%;
  --cod-gray-300: 0 0% 69%;
  --cod-gray-400: 0 0% 53%;
  --cod-gray-500: 0 0% 43%;
  --cod-gray-600: 0 0% 36%;
  --cod-gray-700: 0 0% 31%;
  --cod-gray-800: 0 0% 27%;
  --cod-gray-900: 0 0% 24%;
  --cod-gray-950: 0 0% 7%;
}


  input:-webkit-autofill,
  input:-webkit-autofill:focus {
    transition: background-color 0s 600000s, color 0s 600000s !important;
  }
  .loader {
  position: relative;
  width: 54px;
  height: 54px;
  border-radius: 10px;
}

.loader div {
  width: 8%;
  height: 24%;
  background: rgb(128, 128, 128);
  position: absolute;
  left: 50%;
  top: 30%;
  opacity: 0;
  border-radius: 50px;
  box-shadow: 0 0 3px rgba(0,0,0,0.2);
  animation: fade458 1s linear infinite;
}

@keyframes fade458 {
  from {
    opacity: 1;
  }

  to {
    opacity: 0.25;
  }
}

.loader .bar1 {
  transform: rotate(0deg) translate(0, -130%);
  animation-delay: 0s;
}

.loader .bar2 {
  transform: rotate(30deg) translate(0, -130%);
  animation-delay: -1.1s;
}

.loader .bar3 {
  transform: rotate(60deg) translate(0, -130%);
  animation-delay: -1s;
}

.loader .bar4 {
  transform: rotate(90deg) translate(0, -130%);
  animation-delay: -0.9s;
}

.loader .bar5 {
  transform: rotate(120deg) translate(0, -130%);
  animation-delay: -0.8s;
}

.loader .bar6 {
  transform: rotate(150deg) translate(0, -130%);
  animation-delay: -0.7s;
}

.loader .bar7 {
  transform: rotate(180deg) translate(0, -130%);
  animation-delay: -0.6s;
}

.loader .bar8 {
  transform: rotate(210deg) translate(0, -130%);
  animation-delay: -0.5s;
}

.loader .bar9 {
  transform: rotate(240deg) translate(0, -130%);
  animation-delay: -0.4s;
}

.loader .bar10 {
  transform: rotate(270deg) translate(0, -130%);
  animation-delay: -0.3s;
}

.loader .bar11 {
  transform: rotate(300deg) translate(0, -130%);
  animation-delay: -0.2s;
}

.loader .bar12 {
  transform: rotate(330deg) translate(0, -130%);
  animation-delay: -0.1s;
}

  
</style>
